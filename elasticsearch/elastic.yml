
---

kind: ConfigMap
apiVersion: v1
metadata:
  name: elasticsearch-config
  namespace: elk
data:
  elasticsearch.yml: |
    cluster.name: hai046-cluster
    path.data:
      - /data1
      - /data2
      - /data3
    network.host: 0.0.0.0
    xpack.security.enabled: true
    xpack.security.transport.ssl.enabled: true
    xpack.security.transport.ssl.verification_mode: certificate
    xpack.security.transport.ssl.keystore.path: certs/elastic-stack-ca.p12
    xpack.security.transport.ssl.truststore.path: certs/elastic-stack-ca.p12 
    cluster.initial_master_nodes: k8s-cluster-master-0,k8s-cluster-master-1,k8s-cluster-master-2
    discovery.seed_hosts: k8s-cluster-master-headless
    xpack:
      security:
        authc:
          realms:
            ldap:
              ldap1:
                order: 0
                url: "ldap://ldap.shouyouwan.net:389"
                bind_dn: "cn=admin,dc=vroom,dc=com"
                user_dn_templates:
                  - "cn={0},cn=BE,dc=vroom,dc=com"
                  - "cn={0},cn=Test,dc=vroom,dc=com"
                group_search:
                  base_dn: "dc=vroom,dc=com"
                files:
                  role_mapping: "/usr/local/elasticsearch/config/role_mapping.yml"
                unmapped_groups_as_roles: false

  role_mapping.yml: |
    superuser:
      - "cn=denghaizhu,cn=BE,dc=vroom,dc=com"
      - "cn=lanzhaoyi,cn=BE,dc=vroom,dc=com"


  jvm.options: |
    -Xms2g
    -Xmx2g

    ## GC configuration
    8-13:-XX:+UseConcMarkSweepGC
    8-13:-XX:CMSInitiatingOccupancyFraction=75
    8-13:-XX:+UseCMSInitiatingOccupancyOnly

    # 10-13:-XX:-UseCMSInitiatingOccupancyOnly
    14-:-XX:+UseG1GC

    ## JVM temporary directory
    -Djava.io.tmpdir=${ES_TMPDIR}
    -XX:+HeapDumpOnOutOfMemoryError
    9-:-XX:+ExitOnOutOfMemoryError
    -XX:HeapDumpPath=data
    ## JDK 8 GC logging
    # JDK 9+ GC logging
    9-:-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m
  kibana.yml: |
    elasticsearch.hosts: ["http://k8s-cluster-master:9200"]
    i18n.locale: "zh-CN"
    server.host: "0.0.0.0"
    monitoring.ui.container.elasticsearch.enabled: true
    elasticsearch.username: elastic
    elasticsearch.password: 'YouPassWord'

---
kind: Service
apiVersion: v1
metadata:
  name: k8s-cluster-master-headless
  namespace: elk
  labels:
    app: k8s-cluster-master
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: transport
      protocol: TCP
      port: 9300
      targetPort: 9300
  selector:
    app: k8s-cluster-master
  clusterIP: None
  clusterIPs:
    - None
  type: ClusterIP
  sessionAffinity: None
  publishNotReadyAddresses: true

---
kind: Service
apiVersion: v1
metadata:
  name: k8s-cluster-master-headless
  namespace: elk
  labels:
    app: k8s-cluster-master
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: transport
      protocol: TCP
      port: 9300
      targetPort: 9300
  selector:
    app: k8s-cluster-master
  clusterIP: None
  clusterIPs:
    - None
  type: ClusterIP
  sessionAffinity: None
  publishNotReadyAddresses: true
---
kind: Service
apiVersion: v1
metadata:
  name: k8s-cluster-master
  namespace: elk
  annotations:
    kubesphere.io/creator: admin
spec:
  ports:
    - name: http
      protocol: TCP
      port: 9200
      targetPort: 9200
    - name: transport
      protocol: TCP
      port: 9300
      targetPort: 9300
  selector:
    app: k8s-cluster-master
  type: ClusterIP
  sessionAffinity: None
  publishNotReadyAddresses: true

---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: k8s-cluster-master
  namespace: elk
  labels:
    app: k8s-cluster-master
  annotations:
    esMajorVersion: '7'
    elasticsearchVersion: "7.16.1"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: k8s-cluster-master
  template:
    metadata:
      name: k8s-cluster-master
      labels:
        app: k8s-cluster-master
    spec:      
      containers:
        - name: elasticsearch
          image: 'cheesetest.tencentcloudcr.com/base/elasticsearch:202112111511'
          ports:
            - name: http
              containerPort: 9200
              protocol: TCP
            - name: transport
              containerPort: 9300
              protocol: TCP
          env:
            - name: node.name
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          resources:
            limits:
              cpu: '1'
              memory: 2.5Gi
            requests:
              cpu: '1'
              memory: 2Gi
          volumeMounts:
            - name: elasticsearch-data1
              mountPath: /data1
            - name: elasticsearch-data2
              mountPath: /data2
            - name: elasticsearch-data3
              mountPath: /data3
            - name: elasticsearch-config
              mountPath: /usr/local/elasticsearch/config/elasticsearch.yml        
              subPath: elasticsearch.yml
            - name: elasticsearch-config
              mountPath: /usr/local/elasticsearch/config/jvm.options        
              subPath: jvm.options  
            - name: elasticsearch-config
              mountPath: /usr/local/elasticsearch/config/role_mapping.yml        
              subPath: role_mapping.yml
            - mountPath: "/usr/local/elasticsearch/logs"
              name: elasticsearch-log     
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 1000
            runAsNonRoot: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 120
      dnsPolicy: ClusterFirst
      automountServiceAccountToken: true
      volumes:
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
      - name: elasticsearch-log 
        hostPath:
           path: /data/logs/elasticsearch
      - name: elasticsearch-config
        configMap:
          name: elasticsearch-config

      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - k8s-cluster-master
              topologyKey: kubernetes.io/hostname
      schedulerName: default-scheduler
      imagePullSecrets:
      - name: 100015858417-tcr-mvxfrvzn-dockercfg
      enableServiceLinks: true
  volumeClaimTemplates:
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: elasticsearch-data1
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        volumeMode: Filesystem
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: elasticsearch-data2
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        volumeMode: Filesystem
    - kind: PersistentVolumeClaim
      apiVersion: v1
      metadata:
        name: elasticsearch-data3
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
        volumeMode: Filesystem               
  serviceName: k8s-cluster-master-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  revisionHistoryLimit: 2


---

kind: Deployment
apiVersion: apps/v1
metadata:
  name: kibana
  namespace: elk
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: 'docker.elastic.co/kibana/kibana:7.16.1'
          ports:
            - containerPort: 5601
              protocol: TCP
          env:
            - name: ELASTICSEARCH_HOSTS
              value: 'http://k8s-cluster-master:9200'
            - name: SERVER_HOST
              value: 0.0.0.0
            - name: NODE_OPTIONS
              value: '--max-old-space-size=1800'
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: '1'
              memory: 2Gi
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - >
                  #!/usr/bin/env bash -e


                  # Disable nss cache to avoid filling dentry cache when calling
                  curl

                  # This is required with Kibana Docker using nss < 3.52

                  export NSS_SDB_USE_CACHE=no


                  http () {
                      local path="${1}"
                      set -- -XGET -s --fail -L

                      if [ -n "${ELASTICSEARCH_USERNAME}" ] && [ -n "${ELASTICSEARCH_PASSWORD}" ]; then
                        set -- "$@" -u "${ELASTICSEARCH_USERNAME}:${ELASTICSEARCH_PASSWORD}"
                      fi

                      STATUS=$(curl --output /dev/null --write-out "%{http_code}" -k "$@" "http://localhost:5601${path}")
                      if [[ "${STATUS}" -eq 200 ]]; then
                        exit 0
                      fi

                      echo "Error: Got HTTP code ${STATUS} but expected a 200"
                      exit 1
                  }


                  http "/app/kibana"
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 3
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - name: elasticsearch-config
              mountPath: /usr/share/kibana/config/kibana.yml        
              subPath: kibana.yml 
          imagePullPolicy: IfNotPresent
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsUser: 1000
            runAsNonRoot: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      automountServiceAccountToken: true
      volumes:
        - name: elasticsearch-config
          configMap:
            name: elasticsearch-config
      securityContext:
        fsGroup: 1000
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 2
  progressDeadlineSeconds: 600

---

kind: Service
apiVersion: v1
metadata:
  name: kibana-service
  namespace: elk
  labels:
    app: kibana
spec:
  ports:
    - name: http-kibana
      protocol: TCP
      port: 5601
      targetPort: 5601
      nodePort: 30561
  selector:
    app: kibana
  type: NodePort

    
---

kind: ConfigMap
apiVersion: v1
metadata:
  name: elk-config
  namespace: elk
  annotations:
    kubesphere.io/creator: admin
data:
  elk-config.yaml: |-
    brokers:
      - kafka-kafka-brokers.kafka:9092
    urls:
      - http://k8s-cluster-master-headless:9200
    topicGroup:
      - topic: account_topic_data_dot
        pipeline: geoip
      - topic: account_topic_data_info
        pipeline: geoip
      - topic: account_topic_data_visit
        pipeline: geoip
      - topic: activity_topic_data_info
        pipeline: geoip
      - topic: activity_topic_data_visit
        pipeline: geoip
      - topic: auth_topic_data_dot
        pipeline: geoip
      - topic: auth_topic_data_info
        pipeline: geoip
      - topic: auth_topic_data_visit
        pipeline: geoip
      - topic: big_data_dot
        pipeline: geoip
      - topic: callback_topic_data_dot
        pipeline: geoip
      - topic: callback_topic_data_info
        pipeline: geoip
      - topic: callback_topic_data_visit
        pipeline: geoip
      - topic: chat_room_topic_data_dot
        pipeline: geoip
      - topic: chatroom_topic_data_info
        pipeline: geoip
      - topic: chatroom_topic_data_visit
        pipeline: geoip
      - topic: content_topic_data_info
        pipeline: geoip
      - topic: content_topic_data_visit
        pipeline: geoip
      - topic: file_topic_data_info
        pipeline: geoip
      - topic: file_topic_data_visit
        pipeline: geoip
      - topic: gateway_topic_data_info
        pipeline: geoip
      - topic: general_topic_data_info
        pipeline: geoip
      - topic: general_topic_data_visit
        pipeline: geoip
      - topic: message_topic_data_info
        pipeline: geoip
      - topic: message_topic_data_visit
        pipeline: geoip
      - topic: moment_topic_data_info
        pipeline: geoip
      - topic: moment_topic_data_visit
        pipeline: geoip
      - topic: payment_topic_data_dot
        pipeline: geoip
      - topic: product_topic_data_dot
        pipeline: geoip
      - topic: product_topic_data_info
        pipeline: geoip
      - topic: product_topic_data_visit
        pipeline: geoip
      - topic: push_topic_data_info
        pipeline: geoip
      - topic: risk_topic_data_info
        pipeline: geoip
      - topic: servant_topic_data_info
        pipeline: geoip
      - topic: servant_topic_data_visit
        pipeline: geoip
      - topic: statics_topic_data_info
        pipeline: geoip
      - topic: user_topic_data_dot
        pipeline: geoip
      - topic: user_topic_data_info
        pipeline: geoip
      - topic: user_topic_data_visit
        pipeline: geoip
    groupId: elk-consumer
    elkUser: elastic
    elkPassword: "YouPassWord"
    #显示统计日志
    statEnable: true
    #kafka版本
    version: "2.2.0"
    #显示消费日志
    showMessage: false
    createKibanaIndex: true


---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: elk-consumer
  name: elk-consumer
  namespace: elk
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elk-consumer 
  template:
    metadata:
      labels:
        app: elk-consumer   
    spec:
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      containers:
      - env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        name: elk-consumer
        image: hai046/elk-consumer:latest
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 1
            memory: 512Mi
          requests:
            memory: 512Mi
        volumeMounts:
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /run/secrets/elk-config.yaml
          name: elk-consumer-config
          subPath: elk-config.yaml
        - mountPath: "/data/log/consumer"
          name: elk-consumer-log
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File   
      imagePullSecrets:
      - name: 100015858417-tcr-mvxfrvzn-dockercfg
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 10
      volumes:
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
      - name: elk-consumer-config
        configMap:  
          name: elk-config
      - name: elk-consumer-log
        hostPath:
           path: /data/log/consumer

