---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: zoo-entrance
  namespace: kafka
  labels:
    app: zoo-entrance
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zoo-entrance
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zoo-entrance
    spec:
      containers:
        - name: zoo-entrance
          image: 'ghcr.io/scholzj/zoo-entrance:latest'
          command:
            - /opt/stunnel/stunnel_run.sh
          ports:
            - containerPort: 2181
              name: zoo
              protocol: TCP
          env:
            - name: LOG_LEVEL
              value: notice
            - name: STRIMZI_ZOOKEEPER_CONNECT
              value: 'kafka-zookeeper-client:2181'
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '2181'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - /opt/stunnel/stunnel_healthcheck.sh
                - '2181'
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/cluster-operator-certs/
              name: cluster-operator-certs
            - mountPath: /etc/cluster-ca-certs/
              name: cluster-ca-certs
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - name: cluster-operator-certs
          secret:
            defaultMode: 288
            secretName: kafka-cluster-operator-certs
        - name: cluster-ca-certs
          secret:
            defaultMode: 288
            secretName: kafka-cluster-ca-cert
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: zoo-entrance
  name: zoo-entrance
  namespace: kafka
spec:
  ports:
    - name: zoo
      port: 2181
      protocol: TCP
      targetPort: 2181
  selector:
    app: zoo-entrance
  type: ClusterIP


---

apiVersion: v1
kind: Service
metadata:
  namespace: kafka
  name: kafka-manager
  labels:
    app: kafka-manager
spec:
  type: NodePort
  ports:
    - name: kafka
      port: 9000
      targetPort: 9000
      nodePort: 30900
  selector:
    app: kafka-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-manager
  namespace: kafka
  labels:
    app: kafka-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-manager
  template:
    metadata:
      labels:
        app: kafka-manager
    spec:
      containers:
        - name: kafka-manager
          image: zenko/kafka-manager:1.3.3.22
          imagePullPolicy: IfNotPresent
          ports:
            - name: kafka-manager
              containerPort: 9000
              protocol: TCP
          env:
            - name: ZK_HOSTS
              value: "zoo-entrance:2181"

          livenessProbe:
            httpGet:
              path: /api/health
              port: kafka-manager
          readinessProbe:
            httpGet:
              path: /api/health
              port: kafka-manager
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi

